#!/bin/bash
set -e
set -x

exec 2>&1

function export_daemon_opts() {
    export SPARK_DAEMON_JAVA_OPTS=""
    if [ "${DCOS_SERVICE_NAME}" != "spark" ]; then
        local ZK_SUFFIX=${DCOS_SERVICE_NAME////__}
        export SPARK_DAEMON_JAVA_OPTS="$SPARK_DAEMON_JAVA_OPTS -Dspark.deploy.zookeeper.dir=/spark_mesos_dispatcher${ZK_SUFFIX}"
    fi

    if [ "$SPARK_DISPATCHER_MESOS_ROLE" != "" ]; then
        export SPARK_DAEMON_JAVA_OPTS="$SPARK_DAEMON_JAVA_OPTS -Dspark.mesos.role=$SPARK_DISPATCHER_MESOS_ROLE"
    fi

    if [ "$SPARK_DISPATCHER_MESOS_PRINCIPAL" != "" ]; then
        export SPARK_DAEMON_JAVA_OPTS="$SPARK_DAEMON_JAVA_OPTS -Dspark.mesos.principal=$SPARK_DISPATCHER_MESOS_PRINCIPAL"
    fi

    if [ "$SPARK_DISPATCHER_MESOS_SECRET" != "" ]; then
        export SPARK_DAEMON_JAVA_OPTS="$SPARK_DAEMON_JAVA_OPTS -Dspark.mesos.secret=$SPARK_DISPATCHER_MESOS_SECRET"
    fi
}

function set_log_level() {
    sed "s,<LOG_LEVEL>,${SPARK_LOG_LEVEL}," \
        ${SPARK_HOME}/conf/log4j.properties.template >${SPARK_HOME}/conf/log4j.properties
}

function set_statsd_address() {
  if [ "$STATSD_UDP_HOST" != "" ] && [ "$STATSD_UDP_PORT" != "" ]; then
    sed -e "s/<STATSD_UDP_HOST>/${STATSD_UDP_HOST}/g" \
        -e "s/<STATSD_UDP_PORT>/${STATSD_UDP_PORT}/g" \
        ${SPARK_HOME}/conf/metrics.properties.template >${SPARK_HOME}/conf/metrics.properties
  fi
}

function add_if_non_empty() {
	if [ -n "$2" ]; then
		echo "$1=$2" >> ${SPARK_HOME}/conf/mesos-cluster-dispatcher.properties
	fi
}

function configure_properties() {
    if [ "${SPARK_SSL_KEYSTOREBASE64}" != "" ]; then
        echo "${SPARK_SSL_KEYSTOREBASE64}" | base64 -d > /tmp/dispatcher-keystore.jks
        add_if_non_empty spark.ssl.keyStore /tmp/dispatcher-keystore.jks
    fi

    if [ "${SPARK_SSL_TRUSTSTOREBASE64}" != "" ]; then
        echo "${SPARK_SSL_TRUSTSTOREBASE64}" | base64 -d > /tmp/dispatcher-truststore.jks
        add_if_non_empty spark.ssl.trustStore /tmp/dispatcher-truststore.jks
    fi

    add_if_non_empty spark.mesos.dispatcher.historyServer.url "${SPARK_HISTORY_SERVER_URL}"
    add_if_non_empty spark.ssl.enabled "${SPARK_SSL_ENABLED}"
    add_if_non_empty spark.ssl.keyPassword "${SPARK_SSL_KEYPASSWORD}"
    add_if_non_empty spark.ssl.keyStorePassword "${SPARK_SSL_KEYSTOREPASSWORD}"
    add_if_non_empty spark.ssl.trustStorePassword "${SPARK_SSL_TRUSTSTOREPASSWORD}"
    add_if_non_empty spark.ssl.protocol "${SPARK_SSL_PROTOCOL}"
    add_if_non_empty spark.ssl.enabledAlgorithms "${SPARK_SSL_ENABLEDALGORITHMS}"

    if [ "${VIRTUAL_NETWORK_ENABLED}" = true ]; then
        add_if_non_empty spark.mesos.network.name "${VIRTUAL_NETWORK_NAME}"
        add_if_non_empty spark.mesos.dispatcher.driverDefault.spark.mesos.network.name "${VIRTUAL_NETWORK_NAME}"

        echo "spark.mesos.network.labels=${VIRTUAL_NETWORK_PLUGIN_LABELS}" | \
            sed 's/,$//' >> ${SPARK_HOME}/conf/mesos-cluster-dispatcher.properties

        echo "spark.mesos.dispatcher.driverDefault.spark.mesos.network.labels=${VIRTUAL_NETWORK_PLUGIN_LABELS}" | \
            sed 's/,$//' >> ${SPARK_HOME}/conf/mesos-cluster-dispatcher.properties

        add_if_non_empty spark.mesos.dispatcher.driverDefault.spark.mesos.driverEnv.VIRTUAL_NETWORK_ENABLED "${VIRTUAL_NETWORK_ENABLED}"
        add_if_non_empty spark.mesos.dispatcher.driverDefault.spark.executorEnv.VIRTUAL_NETWORK_ENABLED "${VIRTUAL_NETWORK_ENABLED}"
    fi

    if [ "${SPARK_DOCKER_USER}" != "" ]; then
        echo "spark.mesos.dispatcher.driverDefault.spark.mesos.executor.docker.parameters=user=${SPARK_DOCKER_USER}" >> ${SPARK_HOME}/conf/mesos-cluster-dispatcher.properties
    else
        echo "spark.mesos.dispatcher.driverDefault.spark.mesos.executor.docker.parameters=user=${SPARK_USER}" >> ${SPARK_HOME}/conf/mesos-cluster-dispatcher.properties
    fi

    add_if_non_empty spark.mesos.dispatcher.driverDefault.spark.mesos.driverEnv.SPARK_USER "${SPARK_USER}"

    echo "spark.mesos.proxy.baseURL=../../mesos" >> ${SPARK_HOME}/conf/mesos-cluster-dispatcher.properties

    if [ "${DCOS_SERVICE_NAME}" != "" ]; then
        echo "spark.mesos.dispatcher.driverDefault.spark.mesos.driverEnv.SPARK_APPLICATION_ORIGIN=${DCOS_SERVICE_NAME}" | \
            sed 's/,$//' >> ${SPARK_HOME}/conf/mesos-cluster-dispatcher.properties
    else
        echo "spark.mesos.dispatcher.driverDefault.spark.mesos.driverEnv.SPARK_APPLICATION_ORIGIN=unknown-dispatcher" | \
            sed 's/,$//' >> ${SPARK_HOME}/conf/mesos-cluster-dispatcher.properties
    fi
}

export APPLICATION_WEB_PROXY_BASE="${DISPATCHER_UI_WEB_PROXY_BASE}"
set_log_level
set_statsd_address
export_daemon_opts
configure_properties
ZK="master.mesos:2181"

exec ${SPARK_HOME}/bin/spark-class \
    org.apache.spark.deploy.mesos.MesosClusterDispatcher \
    --port "${DISPATCHER_PORT}" \
    --webui-port "${DISPATCHER_UI_PORT}" \
    --master "mesos://zk://${ZK}/mesos" \
    --host "${SPARK_LOCAL_IP}" \
    --zk "${ZK}" \
    --name "${DCOS_SERVICE_NAME}" \
    --properties-file "${SPARK_HOME}/conf/mesos-cluster-dispatcher.properties"
